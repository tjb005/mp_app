<script type=text/javascript>
	// //var dataset = <%=raw @w1_hist.to_json %>;
	// // var dataset = [5,10,13,19,21,25,22,18,50] // Rectangle Bar Chart
	// var dataset = [
 //                [5, 20], [480, 90], [250, 50], [100, 33], [330, 95],
 //                [410, 12], [475, 44], [25, 67], [85, 21], [220, 88]
 //              ]; // Circle Scatter Plot
	// //Width and height
	// var w = 500;
	// var h = 300;
	// var barPadding = 1;
	// var padding = 20;


// // Div
// d3.select("body").selectAll("div")
//     .data(dataset)
//     .enter()
//     .append("div")
//     .attr("class", "bar")
//     .style("height", function(d) {
//     var barHeight = d * 5;  //Scale
//     return barHeight + "px";
// 	});

// //Create SVG element - Rectangle Bar Chart
// 	var svg = d3.select("body")
//             .append("svg")
//             .attr("width", w)
//             .attr("height", h);

// 	svg.selectAll("rect")
//    .data(dataset)
//    .enter()
//    .append("rect")
//    .attr("x", function(d, i) {
//     return i * (w / dataset.length);})
//    .attr("y", function(d) {
// 	    return h - d;  
// 	})
//    .attr("width", w / dataset.length - barPadding)
//    .attr("height", function(d) {
//     return d ;  
// 	});


 //    //Create SVG element - Circle Scatter Plot
 //    var xScale = d3.scale.linear()
 //                   .domain([0, d3.max(dataset, function(d) { return d[0]; })])
 //                   .range([0, w]);
 //    var yScale = d3.scale.linear()
 //                   .domain([0, d3.max(dataset, function(d) { return d[1]; })])
 //                   .range([0, h]);

 //    var svg = d3.select("body")
 //    .append("svg")
 //    .attr("width", w)
 //    .attr("height", h);

 //    svg.selectAll("circle")
 //   .data(dataset)
 //   .enter()
 //   .append("circle")
 //   .attr("cx", function(d) {
	//     return xScale(d[0]);
	// })
 //   .attr("cy", function(d) {
	//     return yScale(d[1]);
	// })
 //   .attr("r", 5);

 //   var xAxis = d3.svg.axis()
 //                  .scale(xScale)
 //                  .orient("bottom");    
 //    svg.append("g")
 //    .attr("class", "axis") 
 //    .attr("transform", "translate(0," + (h - padding) + ")")
 //    .call(xAxis);

 //    //Define Y axis
	// var yAxis = d3.svg.axis()
 //                  .scale(yScale)
 //                  .orient("left")
 //    //Create Y axis
	// svg.append("g")
 //    .attr("class", "axis")
 //    .attr("transform", "translate(" + padding + ",0)")
 //    .call(yAxis);
                  

</script>